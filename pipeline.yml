# fly --target spring login --concourse-url https://ci.spring.io --team-name "Spring Team"
# fly --target spring set-pipeline --config pipeline.yml --pipeline spring-boot-thin-launcher --load-vars-from credentials.yml
---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: nebhale/slack-notification-resource

resources:
- name: source
  type: git
  source:
    uri: https://github.com/dsyer/spring-boot-thin-launcher.git
- name: slack
  type: slack-notification
  source:
    url: {{slack-url}}
 
slack-failure: &slack-failure
  put: slack
  params:
    attachments:
    - color: danger
      fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <FAILURE>"
      text: "<!here> Build has failed"
      title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
      title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

jobs:
- name: build
  public: true
  plan:
  - get: source
    trigger: true
  - task: maven
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: 
          repository:  adoptopenjdk/openjdk8
          tag: jdk8u192-b12
      inputs:
        - name: source
      caches:
        - path: source/.m2
        - path: source/.gradle
      run:
        dir: source
        path: ./mvnw
        path: sh
        args:
        - -c
        - |
          rm -rf ~/.m2 ~/.gradle
          ln -s $(pwd)/.m2 ~/.m2
          ln -s $(pwd)/.gradle ~/.gradle
          ./mvnw deploy -s .mvn/settings.xml
    params:
      TERM: -dumb
      passphrase: {{passphrase}}
      sonatype_username: {{sonatype-username}}
      sonatype_password: {{sonatype-password}}
      spring_username: {{spring-username}}
      spring_password: {{spring-password}}
    on_failure: *slack-failure
